#!/bin/bash

set -eo pipefail

heading() {
  echo "----->" $@;
}

line() {
  echo "      " $@;
}

run_command_indented() {
  $@ 2>&1 | awk '{print "       " $0}'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

if uname -sm | grep Darwin; then
  PLATFORM="darwin"
else
  PLATFORM="linux"
fi

if ! [ -f "$CACHE_DIR/ejson" ]; then
  heading "Installing ejson from GitHub release (Platform $PLATFORM)"
  mkdir -p "$CACHE_DIR"
  run_command_indented wget https://github.com/Shopify/ejson/releases/download/1.0.1/ejson_${PLATFORM}_binary -O "$CACHE_DIR/ejson"
  chmod +x "$CACHE_DIR/ejson"
else
  heading "ejson is already installed"
fi

heading "Loading keypair from environment variables"
if [ ! -f "$ENV_DIR/EJSON_PUBLIC_KEY" ]; then
    heading 'EJSON_PUBLIC_KEY is undefined; make sure EJSON_PUBLIC_KEY and EJSON_PRIVATE_KEY are set (try `ejson keygen`)'
    exit 1
fi

if [ ! -f "$ENV_DIR/EJSON_PRIVATE_KEY" ]; then
    heading 'EJSON_PRIVATE_KEY is undefined; make sure EJSON_PUBLIC_KEY and EJSON_PRIVATE_KEY are set (try `ejson keygen`)'
    exit 1
fi

export EJSON_KEYDIR=$(mktemp -d)
trap 'rm -rf $EJSON_KEYDIR' EXIT
PUBLIC_KEY=$(cat "$ENV_DIR/EJSON_PUBLIC_KEY")
PRIVATE_KEY=$(cat "$ENV_DIR/EJSON_PRIVATE_KEY")
echo "$PRIVATE_KEY" > "$EJSON_KEYDIR/$PUBLIC_KEY"

PREDICATE="( -name *.ejson )"
EXTENSION=".ejson"
heading "EJSON_ENVIRONMENT is undefined or empty; enumerating and decrypting EJSON files of the form \`*.ejson\`"

COUNTER=0
for FILE in $(find "$BUILD_DIR" $PREDICATE); do
  DECRYPTED_FILE=${FILE%$EXTENSION}.json

  if [ -f "$DECRYPTED_FILE" ]; then
    MEMO=" [overwriting existing file]"
  elif [ -e "$DECRYPTED_FILE" ]; then
    heading "${DECRYPTED_FILE:${#BUILD_DIR}+1}: already exists but is not a regular file"
    exit 1
  else
    MEMO=""
  fi

  if "$CACHE_DIR/ejson" decrypt "$FILE" > "$DECRYPTED_FILE" 2>&1; then
    heading "Decrypting ${FILE:${#BUILD_DIR}+1} --> ${DECRYPTED_FILE:${#BUILD_DIR}+1}$MEMO"
    let COUNTER+=1
  else
    heading "${FILE:${#BUILD_DIR}+1}": $(cat "$DECRYPTED_FILE")
    exit 1
  fi
done

heading "Done. Decrypted $COUNTER different ejson file(s)"
